# Generated by Django 4.2.8 on 2025-10-30 07:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('qr_token', models.CharField(blank=True, max_length=512, null=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/users/')),
                ('is_in', models.BooleanField(default=False)),
                ('check_in_count', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_verified', models.BooleanField(default=False)),
                ('qr_token', models.CharField(blank=True, max_length=512, null=True)),
                ('organizer_qr_token', models.CharField(blank=True, max_length=512, null=True)),
                ('organizer_qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/organizers/')),
                ('organizer_is_in', models.BooleanField(default=False)),
                ('organizer_check_in_count', models.IntegerField(default=0)),
                ('payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('status', models.CharField(default='pending', max_length=20)),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('price_per_hour', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('duration', models.IntegerField(default=60, help_text='Duration in minutes', validators=[django.core.validators.MinValueValidator(1)])),
                ('max_players', models.IntegerField(default=10, help_text='Maximum number of players', validators=[django.core.validators.MinValueValidator(1)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Sport',
                'verbose_name_plural': 'Sports',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('customer', 'Customer'), ('player', 'Player')], default='customer', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCheckInLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('IN', 'Check In'), ('OUT', 'Check Out')], max_length=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkin_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_booked', models.BooleanField(default=False)),
                ('max_players', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('admin_disabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='core.sport')),
            ],
            options={
                'verbose_name': 'Time Slot',
                'verbose_name_plural': 'Time Slots',
                'ordering': ['date', 'start_time'],
                'unique_together': {('sport', 'date', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('qr_token', models.CharField(blank=True, max_length=512, null=True)),
                ('check_in_count', models.IntegerField(default=0)),
                ('is_in', models.BooleanField(default=False)),
                ('last_check_in', models.DateTimeField(blank=True, null=True)),
                ('last_check_out', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='core.booking')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player_profiles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Player',
                'verbose_name_plural': 'Players',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrganizerCheckInLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('IN', 'Check In'), ('OUT', 'Check Out')], max_length=3)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizer_checkin_logs', to='core.booking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CheckInLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('IN', 'Check In'), ('OUT', 'Check Out')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='check_logs', to='core.player')),
            ],
            options={
                'verbose_name': 'Check-In Log',
                'verbose_name_plural': 'Check-In Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BreakTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('reason', models.CharField(default='Break', max_length=255)),
                ('applies_to_weekdays', models.BooleanField(default=True)),
                ('applies_to_weekends', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='break_times', to='core.sport')),
            ],
            options={
                'verbose_name': 'Break Time',
                'verbose_name_plural': 'Break Times',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='BookingConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opens_at', models.TimeField(default='06:00')),
                ('closes_at', models.TimeField(default='22:00')),
                ('slot_duration', models.IntegerField(choices=[(30, '30 minutes'), (60, '1 hour'), (120, '2 hours'), (240, '4 hours')], default=60)),
                ('advance_booking_days', models.IntegerField(choices=[(1, '1 day'), (3, '3 days'), (7, '7 days'), (15, '15 days'), (30, '30 days')], default=7)),
                ('min_booking_duration', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_booking_duration', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(1)])),
                ('buffer_time', models.IntegerField(default=0, help_text='Buffer time in minutes', validators=[django.core.validators.MinValueValidator(0)])),
                ('different_weekend_timings', models.BooleanField(default=False)),
                ('weekend_opens_at', models.TimeField(blank=True, null=True)),
                ('weekend_closes_at', models.TimeField(blank=True, null=True)),
                ('peak_hour_pricing', models.BooleanField(default=False)),
                ('peak_start_time', models.TimeField(blank=True, null=True)),
                ('peak_end_time', models.TimeField(blank=True, null=True)),
                ('peak_price_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=4)),
                ('weekend_pricing', models.BooleanField(default=False)),
                ('weekend_price_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sport', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='booking_config', to='core.sport')),
            ],
            options={
                'verbose_name': 'Booking Configuration',
                'verbose_name_plural': 'Booking Configurations',
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='slot',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='booking', to='core.timeslot'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BlackoutDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reason', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blackout_dates', to='core.sport')),
            ],
            options={
                'verbose_name': 'Blackout Date',
                'verbose_name_plural': 'Blackout Dates',
                'ordering': ['date'],
                'unique_together': {('sport', 'date')},
            },
        ),
    ]
